<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<resultMap id="boardResult" type="Board">
		<result column="board_no" property="boardNo"/>
		<result column="user_no" property="userNo"/>
		<result column="b_no" property="boardOrder"/>
		<result column="board_type" property="boardType"/>
		<result column="board_title" property="boardTitle"/>
		<result column="board_content" property="boardContent"/>
		<result column="create_date" property="createDate"/>
		<result column="top_exp" property="topExp"/>
		<result column="count" property="count"/>
		<result column="dep_name" property="depName"/>
		<result column="job_name" property="jobName"/>
		<result column="user_name" property="userName"/>
		<result column="like" property="like"/>
		<result column="reply" property="reply"/>
	</resultMap>
	
	<resultMap id="attachmentResult" type="Attachment">
		<result column="file_no" property="fileNo"/>
		<result column="ref_type" property="refType"/>
		<result column="ref_no" property="refNo"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
		<result column="upload_date" property="uploadDate"/>
		<result column="file_status" property="fileStatus"/>
	</resultMap>
	
	<resultMap id="replyResult" type="Reply">
		<result column="reply_no" property="replyNo"/>
		<result column="user_no" property="userNo"/>
		<result column="ref_bno" property="refBoardNo"/>
		<result column="ref_rno" property="refReplyNo"/>
		<result column="reply_content" property="replyContent"/>
		<result column="create_date" property="createDate"/>
		<result column="user_name" property="userName"/>
		<result column="job_name" property="jobName"/>
		<result column="level" property="level"/>
	</resultMap>
	
	<resultMap id="reportResult" type="Report">
		<result column="rp_code" property="reportCode"/>
		<result column="rp_type" property="reportType"/>
		<result column="rp_refNo" property="reportRefNo"/>
		<result column="user_no" property="userNo"/>
		<result column="rp_date" property="reportDate"/>
		<result column="rp_content" property="reportContent"/>
		<result column="status" property="status"/>
		<result column="handling_date" property="handlingDate"/>
		<result column="user_name" property="userName"/>
		<result column="job_name" property="jobName"/>
	</resultMap>

	<!-- Author : 최영헌 -->
	<select id="mainBoardList" resultMap="boardResult">
		select board_no
		     , user_no
		     , board_type
		     , board_title
		     , to_char(create_date, 'YYYY-MM-DD HH24:MI') as "CREATE_DATE"
		     , count
		     , dep_name
		  from board
		  <choose>
		  	<when test='type == "1"'>
		 where board_type = 1
		  	</when>
		  	<when test='type == "2"'>
		 where board_type = 2
		   and dep_name = #{dept}
		  	</when>
		  	<when test='type == "3"'>
		 where board_type = 3
		  	</when>
		  </choose>
		   and status = 'Y'
		  order by create_date desc
	</select>

	<!-- 게시판(공지, 익명) 글 개수 조회 -->
	<select id="selectListCount" resultType="_int">
		select
			   count(*)
		  from board
		 where status = 'Y'
		   and save_status = 'N'
		   and board_type = #{no}
	</select>
	
	<!-- 게시판(부서) 글 개수 조회 -->
	<select id="selectDeptCount" resultType="_int">
		select
			   count(*)
		  from board
		 where status = 'Y'
		   and board_type = 2
		   and save_status = 'N'
		   and top_exp = 'N'
		   and dep_name = #{depName}
	</select>
	
	<!-- 게시판(공지, 익명) 글 목록 조회 -->
	<select id="selectList" resultMap="boardResult">
		select rownum b_no, A.*
		  from (
		         select
					   board_no
					 , user_no
					 , board_title
					 , to_char(b.create_date, 'YYYY-MM-DD HH24:MI') as "CREATE_DATE"
					 , count
					 , job_name
					 , user_name
					 , (
					 	select
					 		   count(*)
					 	  from b_like bl
					 	 where bl.board_no = b.board_no
					 ) as "LIKE"
					 , (
					 	select
					 		   count(*)
					 	  from reply
					 	 where ref_bno = board_no
					 ) as "REPLY"
				  from board b
				  join member using(user_no)
				 where b.status = 'Y'
				   and save_status = 'N'
				   and board_type = #{no}
				 order
				    by board_no asc
		  		) "A"
		 order
		    by b_no desc
	</select>
	
	<!-- 게시판(부서) 글 목록 조회 -->
	<select id="selectDeptList" resultMap="boardResult">
		select 
			   rownum b_no
			 , A.*
		  from
		  	  (
		  	    select
					   board_no
					 , user_no
					 , board_title
					 , to_char(b.create_date, 'YYYY-MM-DD HH24:MI') as "CREATE_DATE"
					 , count
					 , job_name
					 , user_name
					 , b.dep_name
					 , (
					 	select
					 		   count(*)
					 	  from b_like bl
					 	 where bl.board_no = b.board_no
					 ) as "LIKE"
					 , (
					 	select
					 		   count(*)
					 	  from reply
					 	 where ref_bno = board_no
					 ) as "REPLY"
				  from board b
				  join member using(user_no)
				 where b.status = 'Y'
				   and board_type = 2
				   and save_status = 'N'
				   and top_exp = 'N'
				   and b.dep_name = #{depName}
				 order
				    by board_no asc
		  	  ) "A"
		 order
		    by b_no desc
	</select>
	
	<!-- 부서게시판 공지글 리스트 조회 -->
	<select id="selectTopList" resultMap="boardResult">
		select 
			   rownum b_no
			 , A.*
		  from
		  	  (
		  	    select
					   board_no
					 , user_no
					 , board_title
					 , to_char(b.create_date, 'YYYY-MM-DD HH24:MI') as "CREATE_DATE"
					 , count
					 , job_name
					 , user_name
					 , b.dep_name
					 , (
					 	select
					 		   count(*)
					 	  from b_like bl
					 	 where bl.board_no = b.board_no
					 ) as "LIKE"
					 , (
					 	select
					 		   count(*)
					 	  from reply
					 	 where ref_bno = board_no
					 ) as "REPLY"
				  from board b
				  join member using(user_no)
				 where b.status = 'Y'
				   and board_type = 2
				   and save_status = 'N'
				   and top_exp = 'Y'
				   and b.dep_name = #{depName}
				 order
				    by board_no asc
		  	  ) "A"
		 order
		    by b_no desc
	</select>
	
	<!-- 임시저장 개수 조회 -->
	<select id="selectSaveCount" resultType="_int">
		select
		       count(*)
		  from board
		 where save_status = 'Y'
		   and status = 'Y'
	</select>
	
	<!-- 게시글 임시저장 -->
	<insert id="saveBoard">
		insert
		  into board
		  (
		    board_no
		  , user_no
		  , board_type
		  , board_title
		  , board_content
		  , top_exp
		  , dep_name
		  , save_status
		  )
		  values
		  (
		    seq_board.nextval
		  , #{userNo}
		  , #{boardType}
		  , #{boardTitle}
		  , #{boardContent}
		  , #{topExp}
		  , #{depName}
		  , 'Y'
		  )
	</insert>
	
	<!-- 첨부파일 임시저장 -->
	<insert id="saveAttachment">
		insert
		  into attachment
		  (
		    file_no
		  , ref_type
		  , ref_no
		  , origin_name
		  , change_name
		  )
		  values
		  (
		    seq_file.nextval
		  , #{refType}
		  , seq_board.currval
		  , #{originName}
		  , #{changeName}
		  )
	</insert>
	
	<!-- 글번호 조회 -->
	<select id="selectBoardNo" resultType="String">
		select
			   seq_board.currval
		  from dual
	</select>
	
	<!-- 글번호에 해당하는 파일번호 조회 -->
	<select id="selectAttachment" resultMap="attachmentResult">
		select
			   file_no
			 , ref_type
			 , ref_no
			 , origin_name
			 , change_name
			 , upload_date
			 , file_status
		  from attachment
		 where ref_type = 2
		   and ref_no = #{boardNo}
	</select>
	
	<!-- 글번호에 해당하는 첨부파일 삭제 -->
	<delete id="deleteAttachment">
		delete
		  from attachment
		 where ref_type = 2
		   and ref_no = #{boardNo}
	</delete>
	
	<!-- 게시글 임시저장 업데이트 -->
	<update id="updateSaveBoard">
		update
			   board
		   set board_title = #{boardTitle}
		     , board_content = #{boardContent}
		     , create_date = sysdate
		     , top_exp = #{topExp}
		 where board_no = #{boardNo}
	</update>
	
	<!-- 첨부파일 임시저장 업데이트 -->
	<insert id="updateSaveAttachment">
		insert
		  into attachment
		  (
		    file_no
		  , ref_type
		  , ref_no
		  , origin_name
		  , change_name
		  )
		  values
		  (
		    seq_file.nextval
		  , #{refType}
		  , #{refNo}
		  , #{originName}
		  , #{changeName}
		  )
	</insert>
	
	<!-- 게시글 삽입 -->
	<insert id="insertBoard">
		insert
		  into board
		  (
		    board_no
		  , user_no
		  , board_type
		  , board_title
		  , board_content
		  , top_exp
		  , dep_name
		  )
		  values
		  (
		    seq_board.nextval
		  , #{userNo}
		  , #{boardType}
		  , #{boardTitle}
		  , #{boardContent}
		  , #{topExp}
		  , #{depName}
		  )
	</insert>
	
	<!-- 첨부파일 삽입 -->
	<insert id="insertAttachment">
		insert
		  into attachment
		  (
		    file_no
		  , ref_type
		  , ref_no
		  , origin_name
		  , change_name
		  )
		  values
		  (
		    seq_file.nextval
		  , #{refType}
		  , seq_board.currval
		  , #{originName}
		  , #{changeName}
		  )
	</insert>
	
	<!-- 임시저장된 게시글 등록 -->
	<update id="insertSaveBoard">
		update
			   board
		   set board_title = #{boardTitle}
		     , board_content = #{boardContent}
		     , create_date = sysdate
		     , top_exp = #{topExp}
		     , save_status = 'N'
		 where board_no = #{boardNo}
	</update>
	
	<!-- 임시저장 리스트 조회 -->
	<select id="selectSaveList" resultMap="boardResult">
		select
			   board_no
			 , board_title
			 , to_char(create_date, 'YYYY-MM-DD HH24:MI') as "CREATE_DATE"
			 , dep_name
		  from board
		 where user_no = #{userNo}
		   and board_type = #{boardType}
		   and status = 'Y'
		   and save_status = 'Y'
		 order
		    by board_no desc
	</select>
	
	<!-- 임시저장 게시글 조회 -->
	<select id="selectSave" resultMap="boardResult">
		select
			   board_no
			 , board_title
			 , board_content
			 , top_exp
		  from board
		 where board_no = #{boardNo}
		   and status = 'Y'
		   and save_status = 'Y'
	</select>
	
	<!-- 조회수 증가 -->
	<update id="increaseCount">
		update
		       board
		   set count = count + 1
		 where board_no = #{boardNo}
		   and status = 'Y'
	</update>
	
	<!-- 선택한 게시글 조회 -->
	<select id="selectBoard" resultMap="boardResult">
		select
		       board_no
		     , user_no
		     , board_type
		     , user_name
		     , board_title
		     , board_content
		     , to_char(b.create_date, 'YYYY-MM-DD HH24:MI') as "CREATE_DATE"
		     , top_exp
		     , count
		     , job_name
		     , b.dep_name
		     , (
			 	select
			 		   count(*)
			 	  from b_like bl
			 	 where bl.board_no = b.board_no
			 ) as "LIKE"
			 , (
			 	select
			 		   count(*)
			 	  from reply
			 	 where ref_bno = board_no
			 ) as "REPLY"
		  from board b
		  join member using(user_no)
		 where board_no = #{boardNo}
		   and b.status = 'Y'
	</select>
	
	<!-- 게시글 좋아요 여부 -->
	<select id="selectBoardLike" resultType="_int">
		select
		       count(*)
		  from b_like
		 where board_no = #{boardNo}
		   and user_no = #{userNo}
	</select>
	
	<!-- 댓글 리스트 조회 -->
	<select id="selectReplyList" resultMap="replyResult">
		select
		       reply_no
		     , user_no
		     , user_name
		     , reply_content
		     , to_char(r.create_date, 'YYYY-MM-DD HH24:MI') as "CREATE_DATE"
		     , job_name
		     , level
		  from reply r
		  join member using(user_no)
		 where ref_bno = #{boardNo}
		   and r.status = 'Y'
		 start with ref_rno = 0
	   connect by prior reply_no = ref_rno
		 order siblings by create_date desc
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="insertReply">
		insert
		  into reply
		  (
		    reply_no
		  , user_no
		  , ref_bno
		  , reply_content
		  )
		  values
		  (
		    seq_reply.nextval
		  , #{userNo}
		  , #{refBoardNo}
		  , #{replyContent}
		  )
	</insert>
	
	<!-- 대댓글 작성 -->
	<insert id="insertreReply">
		insert
		  into reply
		  (
		    reply_no
		  , user_no
		  , ref_bno
		  , ref_rno
		  , reply_content
		  )
		  values
		  (
		    seq_reply.nextval
		  , #{userNo}
		  , #{refBoardNo}
		  , #{refReplyNo}
		  , #{replyContent}
		  )
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="updateReply">
		update
		       reply
		   set reply_content = #{replyContent}
		 where reply_no = #{replyNo}
		   and status = 'Y'
	</update>
	
	<!-- 게시글 좋아요 -->
	<insert id="insertBoardLike">
		insert
		  into b_like
		  (
		    board_no
		  , user_no
		  )
		  values
		  (
		    #{boardNo}
		  , #{userNo}
		  )
	</insert>
	
	<!-- 게시글 좋아요 해제 -->
	<delete id="deleteBoardLike">
		delete
		       b_like
		 where board_no = #{boardNo}
		   and user_no = #{userNo}
	</delete>
	
	<!-- 게시글 좋아요 개수 -->
	<select id="selectBoardLikeCount" resultType="_int">
		select
	 		   count(*)
	 	  from b_like
	 	 where board_no = #{boardNo}
	</select>
	
	<!-- 신고 여부 조회 -->
	<select id="checkReport" resultMap="reportResult">
		select
		       rp_refno
		     , user_no
		  from rp_board
		 where rp_refno = #{reportRefNo}
		   and user_no = #{userNo}
	</select>
	
	<!-- 신고 -->
	<insert id="insertReport">
		insert
		  into rp_board
		  (
		    rp_code
		  , rp_type
		  , rp_refno
		  , user_no
		  , rp_content
		  )
		  values
		  (
		    seq_rp.nextval
		  , #{reportType}
		  , #{reportRefNo}
		  , #{userNo}
		  , #{reportContent}
		  )
	</insert>
	
	<!-- 신고 검색 -->
	<select id="searchReport" resultMap="reportResult">
		select
		       rp_code
		     , rp_type
		     , rp_refno
		     , to_char(rp_date, 'YYYY-MM-DD HH24:MI') as "RP_DATE"
		     , user_no
		     , user_name
		     , job_name
		     , rp_content
		     , rp.status
		     , to_char(handling_date, 'YYYY-MM-DD HH24:MI') as "HANDLING_DATE"
		  from rp_board rp
		  join member using(user_no)
		 where <choose>
		 		  <when test="searchRp == 'rp1'">
		 		  	rp_content like '%' || #{keyword} || '%'
		 		  </when>
		 		  <when test="searchRp == 'rp2'">
		 		  	user_name like '%' || #{keyword} || '%'
		 		  </when>
		 		  <otherwise>
		 		  	dep_name like '%팀%'
		 		  </otherwise>
		 	   </choose>
		   and <choose>
		   		  <when test="rpType == 'rt1'">
		   		  	rp_type = 1
		   		  </when>
		   		  <when test="rpType == 'rt2'">
		   		  	rp_type = 2
		   		  </when>
		   		  <otherwise>
		   		  	(rp_type = 1 or rp_type = 2)
		   		  </otherwise>
		   	   </choose>
		   and <choose>
		   		  <when test="rpHandle == 'rh1'">
		   		  	rp.status = 'Y'
		   		  </when>
		   		  <when test="rpHandle == 'rh2'">
		   		  	rp.status = 'N'
		   		  </when>
		   		  <otherwise>
		   		  	(rp.status = 'Y' or rp.status = 'N')
		   		  </otherwise>
		   	   </choose>
		  order
		     by rp_date desc
	</select>

</mapper>