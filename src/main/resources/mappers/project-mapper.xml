<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="projectMapper">
	
	<resultMap id="projectResult" type="Project">
		<result column="project_no" property="projectNo"/>
		<result column="user_no" property="proAdminNo"/>
		<result column="project_title" property="projectTitle"/>
		<result column="project_content" property="projectContent"/>
		<result column="status" property="status"/>
		<result column="category" property="category"/>
		<result column="pro_open" property="proOpen"/>
		<result column="dep_name" property="depName"/>
		<result column="pro_date" property="proDate"/>
	</resultMap>
	
	<resultMap type="ProMember" id="proMemberResult">
		<result column="project_no" property="proMemNo"/>
		<result column="user_no" property="userMemNo"/>		
	</resultMap>
	
	<resultMap type="ProBoard" id="proBoardResult">
		<result column="pro_board_no" property="proBoardNo"/>
		<result column="project_no" property="projectNo"/>
		<result column="boardWriterNo" property="boardWriterNo"/>
		<result column="pro_board_status" property="proBoardStatus"/>
		<result column="create_date" property="createDate"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="pro_board_level" property="proBoardLevel"/>
		<result column="status" property="boardStatus"/>
		<result column="count" property="count"/>
		<result column="attach_path" property="attachPath"/>
		<result column="attach_origin" property="attachOrigin"/>
		<result column="attach_modify" property="attachModify"/>
		<result column="pro_title" property="proTitle"/>
		<result column="pro_content" property="proContent"/>
		<result column="pro_board_yn" property="proBoardYn"/>
	</resultMap>
	
	<resultMap type="Member" id="memberResult">
		<result column="user_name" property="pbUserName"/>
		<result column="job_name" property="pbJobName"/>
		<result column="dep_name" property="pbDepName"/>
		<result column="user_no" property="userNo"/>
	</resultMap>
	
	<resultMap type="ProReply" id="proReplyResult">
		<result column="pro_reply_no" property="proReplyNo"/>
		<result column="user_no" property="replyWriter"/>
		<result column="pro_reply" property="proReply"/>
		<result column="create_date" property="rCreateDate"/>
		<result column="modify_date" property="rModifyDate"/>
	</resultMap>
	
	<!-- 내팀의 프로젝트 리스트 조회 -->
	<select id="selectList" resultMap="projectResult">
	<!-- 
	    select	
               p.project_no
		     , p.project_title
		     , pb.user_no as "boardWriterNo"			     
		     , p.category
             , p.dep_name
		  from project p
          join pro_member pm on (p.project_no = pm.project_no)
          join pro_board pb on (p.project_no = pb.project_no)
         where pm.user_no = #{userNo}
           and p.dep_name like '%${depName}%'
            -->
		select
               p.project_no
		     , p.project_title
             , pb.user_no as "boardWriterNo"
		     , p.category
             , p.dep_name
		  from project p
          join pro_member pm on (p.project_no = pm.project_no)
          join pro_board pb on (p.project_no = pb.project_no)          
         where pb.user_no = #{userNo}
           and p.dep_name like '%${depName}%'          
	</select>
	
	<!-- 프로젝트게시물리스트 페이징처리 -->
	<select id="selectListCount" resultType="_int">
		select
			   count(*)
		  from pro_board
		 where status = 'Y' 	   
	</select>
	
	<!-- 프로젝트 상세리스트 조회 -->
	<select id="selectProBoardList" resultMap="proBoardResult">
		select
		       pb.pro_board_no
		     , pb.pro_board_status
		     , pb.pro_board_level
		     , pb.pro_title
		     , pb.project_no
		     , pb.user_no as "boardWriterNo"		     
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , pb.create_date
		     , pb.modify_date
		     , pb.start_date
		     , pb.end_date 
		     , pb.attach_origin
		     , pb.attach_modify
		  from pro_board pb
		  join member m on (m.user_no = pb.user_no)
		 where pb.project_no = 8
		   and pb.status = 'Y'
		 order
		    by pb.pro_board_no desc
	</select>
	
	<!-- 프로젝트게시물 조회수증가 -->
	<update id="increaseCount">
		update
		       pro_board
		   set count = count+1
		 where pro_board_no = #{proBoardNo}
		   and status = 'Y'
	</update>
	
	<!-- 프로젝트게시물 상세조회 -->
	<select id="selectDetailProBoard" resultMap="proBoardResult">
		select
			   pb.pro_board_no
		     , pb.pro_title
		     , pb.pro_board_status
		     , pb.user_no as "boardWriterNo"
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , pb.start_date
		     , pb.end_date 
		     , pb.pro_board_level
		     , pb.attach_origin
		     , pb.attach_modify
		     , pb.pro_content
		     , count
		  from pro_board pb
		  join member m on (m.user_no = pb.user_no)
		 where pb.pro_board_no = #{proBoardNo}
	</select>
	
	<!-- 프로젝트게시물 수정 -->
	<update id="updateProBoard">
		update
			   pro_board
		   set pro_title = #{proTitle}	   	   
		     , pro_content = #{proContent}
             , pro_board_status = #{proBoardStatus}
             , modify_date = sysdate
             , start_date = #{startDate}
             , end_date = #{endDate}
             , pro_board_level = #{proBoardLevel}
		     , attach_origin = #{attachOrigin}
		     , attach_modify = #{attachModify}
		 where pro_board_no = #{proBoardNo}
	</update>
	
	<!-- 프로젝트게시물 삭제 -->
	<update id="deleteProBoard">
		update
			   pro_board
		   set status = 'N'
		 where pro_board_no = #{proBoardNo}  	   
	</update>
	
	<!-- 프로젝트게시물 등록 -->
	<insert id="insertProBoard">
		insert
		  into pro_board
		  (
		    pro_board_no
		  , project_no
		  , user_no
          , pro_board_status
          , create_date
          , modify_date
          , start_date
          , end_date
          , pro_board_level
          , status          
          , attach_path
          , attach_origin
          , attach_modify
          , pro_title
          , pro_content
		  )
		  values
		  (
		    seq_pro_board.nextval
		  , #{projectNo}
		  , #{boardWriterNo}
		  , #{proBoardStatus}
		  , sysdate
		  , sysdate
          , #{startDate}
          , #{endDate}
          , #{proBoardLevel}  
          , 'Y'
          , #{attachPath}  
          , #{attachOrigin}  
          , #{attachModify}  
          , #{proTitle}  
          , #{proContent}  
		  )
	</insert>
	
	<!-- ajax 프로젝트 게시물 댓글조회 -->
	<select id="ajaxSelectReplyList" resultMap="proReplyResult">
		select
		       pr.pro_reply_no
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , m.dep_name as "pbDepName"
		     , to_char(pr.create_date, 'YYYY-MM-DD') as "rCreateDate"
		     , to_char(pr.modify_date, 'YYYY-MM-DD') as "rModifyDate"
		     , pr.pro_reply
		  from pro_reply pr
		  join member m on (pr.user_no = m.user_no)
		  join pro_board pb on (pr.pro_board_no = pb.pro_board_no)
		 where pb.pro_board_no = #{proBoardNo}
		 order
		    by pro_reply_no
	</select>
	
	<!-- ajax 프로젝트 게시물 댓글입력 -->
	<insert id="ajaxInsertReply">
		insert
		  into pro_reply
		  (
		    pro_reply_no
		  , pro_board_no
		  , user_no
          , pro_reply
          , create_date
          , modify_date
		  )
		  values
		  (
		    seq_pro_reply.nextval
		  , #{proBoardNo}
		  , #{replyWriter}
		  , #{proReply}
		  , sysdate
		  , sysdate
		  )	
	</insert>

</mapper>












