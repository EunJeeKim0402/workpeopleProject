<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="projectMapper">
	
	<resultMap type="Project" id="projectResult">
		<result column="project_no" property="projectNo"/>
		<result column="proAdminNo" property="proAdminNo"/>
		<result column="user_no" property="userNo"/>
		<result column="project_title" property="projectTitle"/>
		<result column="project_content" property="projectContent"/>
		<result column="status" property="status"/>
		<result column="category" property="category"/>
		<result column="pro_open" property="proOpen"/>
		<result column="dep_name" property="depName"/>
		<result column="pro_date" property="proDate"/>
		<result column="userMemNo" property="userMemNo"/>
		<result column="pro_approve" property="proApprove"/>
		<result column="checkDep" property="checkDep"/>
		<result column="countMember" property="countMember"/>
	</resultMap>
	
	<resultMap type="ProMember" id="proMemberResult">
		<result column="project_no" property="projectNo"/>
		<result column="user_no" property="userNo"/>
		<result column="user_no" property="userMemNo"/>
		<result column="userMemNo" property="userMemNo"/>
		<result column="pmMemberCount" property="pmMemberCount"/>
		<result column="pro_approve" property="proApprove"/>
	</resultMap>
	
	<resultMap type="ProBoard" id="proBoardResult">
		<result column="pro_board_no" property="proBoardNo"/>
		<result column="project_no" property="projectNo"/>
		<result column="boardWriterNo" property="boardWriterNo"/>
		<result column="pro_board_status" property="proBoardStatus"/>
		<result column="create_date" property="createDate"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="pro_board_level" property="proBoardLevel"/>
		<result column="status" property="boardStatus"/>
		<result column="count" property="count"/>
		<result column="attach_path" property="attachPath"/>
		<result column="attach_origin" property="attachOrigin"/>
		<result column="attach_modify" property="attachModify"/>
		<result column="pro_title" property="proTitle"/>
		<result column="pro_content" property="proContent"/>
		<result column="pro_board_yn" property="proBoardYn"/>
	</resultMap>
	
	<resultMap type="Member" id="memberResult">
		<result column="pbUserName" property="pbUserName"/>
		<result column="pbJobName" property="pbJobName"/>
		<result column="pbDepName" property="pbDepName"/>
		<result column="user_no" property="userNo"/>
	</resultMap>
	
	<resultMap type="ProReply" id="proReplyResult">
		<result column="pro_reply_no" property="proReplyNo"/>
		<result column="replyWriter" property="replyWriter"/>
		<result column="pro_reply" property="proReply"/>
		<result column="create_date" property="rCreateDate"/>
		<result column="modify_date" property="rModifyDate"/>
	</resultMap>
	
	<!-- [김은지] 메인화면 프로젝트리스트 조회 -->
	<select id="homeProjectList" resultMap="projectResult">
	    select
               p.project_no
		     , p.project_title
             , p.user_no as "proAdminNo"
		     , p.category
             , p.dep_name
             , pm.pro_approve         
             , (
                 select count(*)
                   from pro_member
                  where project_no = p.project_no
               ) as "countMember" <!-- 프로젝트 참여인원 구하기 -->                 
  		  from project p    
  		  join pro_member pm on (p.project_no = pm.project_no)                 
           and pm.user_no = '00014' <!-- 로그인한 회원번호 -->      
           and pro_approve = 'Y'
         order
            by p.project_no desc
	</select>
	
	<!-- [김은지] 내팀의 프로젝트 리스트 조회 -->
	<select id="selectList" resultMap="projectResult">       
        select
               p.project_no
		     , p.project_title
             , p.user_no as "proAdminNo"
		     , p.category
             , p.dep_name
             , pm.pro_approve         
             , (
                 select count(*)
                   from pro_member pm
                  where pm.project_no = p.project_no
                    and pm.pro_approve = 'Y'
                    and user_no = #{userNo} <!-- 로그인한회원번호 -->
               ) as "checkDep" <!-- 내가 참여했는지 아닌지 확인 -->
             , (
                 select count(*)
                   from pro_member
                  where project_no = p.project_no
               ) as "countMember" <!-- 프로젝트 참여인원 구하기 -->                 
  		  from project p    
  		  join pro_member pm on (p.project_no = pm.project_no)         
         where p.dep_name like '%'||#{depName}||'%'
           and pm.user_no = #{userNo} <!-- 로그인한 회원번호 -->      
         order
            by p.project_no desc
	</select>
	
	<!-- [김은지] 참여중인 프로젝트리스트 조회 | 위의 프로젝트리스트는 제외 -->
	<select id="selectList2" resultMap="projectResult">
	    select
               p.project_no
		     , p.project_title
             , p.user_no as "proAdminNo"
		     , p.category
             , p.dep_name
  		  from project p       
          join pro_member pm on (p.project_no = pm.project_no)
         where p.dep_name not like '%'||#{depName}||'%'      
         order
            by p.project_no desc
	</select>
		
	<!-- [김은지] 전체 프로젝트 조회 -->
	<select id="selectTotalProject" resultMap="projectResult">
		select
               p.project_no
		     , p.project_title
             , p.user_no as "proAdminNo"
		     , p.category
             , p.dep_name
             , p.pro_open
             , (
                 select count(*)
                   from pro_member pm
                  where pm.project_no = p.project_no
                    and pm.pro_approve = 'Y'
                    and user_no = #{userNo} <!-- 로그인한회원번호 -->
               ) as "checkDep" <!-- 내가 참여했는지 아닌지 확인 -->
             , (
                 select count(*)
                   from pro_member
                  where project_no = p.project_no
               ) as "countMember" <!-- 프로젝트 참여인원 구하기 -->   
  		  from project p                
         order
            by p.project_no desc
	</select>	
	
	<!-- [김은지] 프로젝트게시물 관리자조회 -->
	<select id="selectAdmin" resultMap="projectResult">
	    select
               p.project_no
		     , p.user_no as "proAdminNo"		     
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
             , m.dep_name as "pbDepName"
          from project p    
          join member m on (m.user_no = p.user_no) 
         where p.project_no = #{projectNo}
	</select>
	
	<!-- [김은지] 프로젝트게시물 참여자 조회 -->
	<select id="selectMember" resultMap="proMemberResult">
		select
               pm.user_no as "userMemNo"	
             , pm.project_no 	     
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
             , m.dep_name "pbDepName"
          from project p    
          join pro_member pm on (pm.project_no = p.project_no)
          join member m on (m.user_no = pm.user_no) 
         where pm.project_no = #{projectNo}
	</select>
	
	<!-- [김은지] 프로젝트 등록 -->
	<insert id="insertProject">
		insert
		  into project
		  (
		    project_no
		  , user_no
          , project_title
          , project_content
          , status
          , category
          , pro_open
          , dep_name
          , pro_date
		  )
		  values
		  (
		    seq_project.nextval
		  , #{proAdminNo}
          , #{projectTitle}
          , #{projectContent}
          , #{status}
          , #{category}
          , #{proOpen}
          , #{depName}
          , sysdate
		  )	
	</insert>
	
	<!-- [김은지] 프로젝트 관리자 승인탭 -->
	<select id="adminProApproveList" resultMap="projectResult">
	    select pm.project_no
		     , p.project_title
		     , p.user_no as "proAdminNo"
		     , m.dep_name as "pbDepName"
		     , pm.user_no as "userMemNo"
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , pm.pro_approve
		  from pro_member pm
		  join project p on (pm.project_no = p.project_no)
		  join member m on (pm.user_no = m.user_no)  
		 where p.user_no = #{userNo} <!-- 로그인한 사원번호 -->
		   and pro_approve = 'N'
	</select>
	
	<!-- [김은지] 프로젝트 관리자 승인 시 한명 모달조회 -->
	<select id="adminApproveMember" resultMap="projectResult">
		select
               p.project_no
		     , pm.user_no as "userMemNo"		     
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
             , m.dep_name as "pbDepName"
             , pm.pro_approve
          from project p    
          join pro_member pm on (p.project_no = pm.project_no)
          join member m on (m.user_no = pm.user_no) 
         where p.project_no = #{projectNo}
           and pm.pro_approve = 'N'
           and pm.user_no = #{userMemNo}		
	</select>
	
	<!-- [김은지] 관리자 프로젝트 승인 -->
	<update id="projectApprove">
		update
			   pro_member
		   set pro_approve = 'Y'
		 where project_no = #{projectNo}
           and user_no = #{userMemNo}
	</update>
	
	<!-- [김은지] 프로젝트 가입신청 -->
	<insert id="proApproveRequest">
	    insert
		  into pro_member
		  (
		    project_no
		  , user_no
          , pro_approve
		  )
		  values
		  (
		    #{projectNo}
          , #{userMemNo}
          , 'N'
		  )
	</insert>	
	
	<!-- [김은지] 프로젝트게시물리스트 페이징처리 -->
	<select id="selectListCount" resultType="_int">
		select
			   count(*)
		  from pro_board
		 where status = 'Y' 	   
		   and project_no = #{projectNo}
	</select>
	
	<!-- [김은지] 프로젝트 상세리스트 조회 -->
	<select id="selectProBoardList" resultMap="proBoardResult">
		select
		       pb.pro_board_no
		     , pb.pro_board_status
		     , pb.pro_board_level
		     , pb.pro_title
		     , pb.project_no
		     , pb.user_no as "boardWriterNo"		     
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , pb.create_date
		     , pb.modify_date
		     , pb.start_date
		     , pb.end_date 
		     , pb.attach_origin
		     , pb.attach_modify
		  from pro_board pb
		  join member m on (m.user_no = pb.user_no)
		 where pb.project_no = #{projectNo}
		   and pb.status = 'Y'
		  <if test="status == '1'"> 
		   and pb.pro_board_status = 1 or pb.pro_board_status = 2 or pb.pro_board_status = 3
		  </if>
		  <if test="status == '2'">
           and pb.pro_board_status = 2
          </if>
          <if test="status == '3'"> 
           and pb.pro_board_status = 3
          </if> 
		 order
		    by pb.pro_board_no desc
	</select>
	
	<!-- [김은지] 프로젝트게시물 검색 -->
	<select id="selectSearchCount" resultType="_int">
		select
		       count(*)
		  from pro_board pb
		  join member m on (m.user_no = pb.user_no)
		 where pb.project_no = #{no}
		   and pb.status = 'Y'
	   	  <if test="condition == 'writer'">
		   	and m.user_name
	   	  </if>		
          <if test="condition == 'title'">
           	and pb.pro_title
          </if>
          <if test="condition == 'content'">
           	and pb.pro_content	   
          </if>
	   	  	like '%'||#{keyword}||'%'		    
	</select>
	
	<!-- [김은지] 프로젝트게시물 검색 (제목|내용|작성자) -->
	<select id="selectSearchList" resultMap="proBoardResult">
		select
		       pb.pro_board_no
		     , pb.pro_board_status
		     , pb.pro_board_level
		     , pb.pro_title
		     , pb.project_no
		     , pb.user_no as "boardWriterNo"		     
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , pb.create_date
		     , pb.modify_date
		     , pb.start_date
		     , pb.end_date 
		     , pb.attach_origin
		     , pb.attach_modify
		  from pro_board pb
		  join member m on (m.user_no = pb.user_no)
		 where pb.project_no = #{no}
		   and pb.status = 'Y'
		   <choose>
		   	  <when test="condition == 'writer'">
			   	 and m.user_name
		   	  </when>		
           	  <when test="condition == 'title'">
                 and pb.pro_title
           	  </when>
           	  <when test="condition == 'content'">
                 and pb.pro_content	   
           	  </when>
		   </choose>
		   		like '%'||#{keyword}||'%'
		 order
		    by pb.pro_board_no desc
	</select>	
	
	<!-- [김은지] 프로젝트게시물 조회수증가 -->
	<update id="increaseCount">
		update
		       pro_board
		   set count = count+1
		 where pro_board_no = #{proBoardNo}
		   and status = 'Y'
	</update>
	
	<!-- [김은지] 프로젝트게시물 상세조회 -->
	<select id="selectDetailProBoard" resultMap="proBoardResult">
		select
			   pb.pro_board_no
		     , pb.pro_title
		     , pb.pro_board_status
		     , pb.user_no as "boardWriterNo"
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , pb.start_date
		     , pb.end_date 
		     , pb.pro_board_level
		     , pb.attach_origin
		     , pb.attach_modify
		     , pb.pro_content
		     , count
		  from pro_board pb
		  join member m on (m.user_no = pb.user_no)
		 where pb.pro_board_no = #{proBoardNo}
	</select>
	
	<!-- [김은지] 프로젝트게시물 수정 -->
	<update id="updateProBoard">
		update
			   pro_board
		   set pro_title = #{proTitle}	   	   
		     , pro_content = #{proContent}
             , pro_board_status = #{proBoardStatus}
             , modify_date = sysdate
             , start_date = #{startDate}
             , end_date = #{endDate}
             , pro_board_level = #{proBoardLevel}
		     , attach_origin = #{attachOrigin}
		     , attach_modify = #{attachModify}
		 where pro_board_no = #{proBoardNo}
	</update>
	
	<!-- [김은지] 프로젝트게시물 삭제 -->
	<update id="deleteProBoard">
		update
			   pro_board
		   set status = 'N'
		 where pro_board_no = #{proBoardNo}  	   
	</update>
	
	<!-- [김은지] 프로젝트게시물 등록 -->
	<insert id="insertProBoard">
		insert
		  into pro_board
		  (
		    pro_board_no
		  , project_no
		  , user_no
          , pro_board_status
          , create_date
          , modify_date
          , start_date
          , end_date
          , pro_board_level
          , status          
          , attach_path
          , attach_origin
          , attach_modify
          , pro_title
          , pro_content
		  )
		  values
		  (
		    seq_pro_board.nextval
		  , #{projectNo}
		  , #{boardWriterNo}
		  , #{proBoardStatus}
		  , sysdate
		  , sysdate
          , #{startDate}
          , #{endDate}
          , #{proBoardLevel}  
          , 'Y'
          , #{attachPath}  
          , #{attachOrigin}  
          , #{attachModify}  
          , #{proTitle}  
          , #{proContent}  
		  )
	</insert>
	
	<!-- [김은지] ajax 프로젝트 게시물 댓글조회 -->
	<select id="ajaxSelectReplyList" resultMap="proReplyResult">
		select
		       pr.pro_reply_no
		     , m.user_name as "pbUserName"
		     , m.job_name as "pbJobName"
		     , m.dep_name as "pbDepName"
		     , to_char(pr.create_date, 'YYYY-MM-DD') as "rCreateDate"
		     , to_char(pr.modify_date, 'YYYY-MM-DD') as "rModifyDate"
		     , pr.user_no as "replyWriter"
		     , pr.pro_reply
		  from pro_reply pr
		  join member m on (pr.user_no = m.user_no)
		  join pro_board pb on (pr.pro_board_no = pb.pro_board_no)
		 where pb.pro_board_no = #{proBoardNo}
		 order
		    by pro_reply_no
	</select>
	
	<!-- [김은지] ajax 프로젝트 게시물 댓글입력 -->
	<insert id="ajaxInsertReply">
		insert
		  into pro_reply
		  (
		    pro_reply_no
		  , pro_board_no
		  , user_no
          , pro_reply
          , create_date
          , modify_date
		  )
		  values
		  (
		    seq_pro_reply.nextval
		  , #{proBoardNo}
		  , #{replyWriter}
		  , #{proReply}
		  , sysdate
		  , sysdate
		  )	
	</insert>

</mapper>












